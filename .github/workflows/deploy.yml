name: Deploy to Azure

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Deploy application
      run: |
        ssh-keyscan -H ${{ secrets.AZURE_HOST }} >> ~/.ssh/known_hosts
        ssh ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "mkdir -p ~/flask-app"
        scp -r ./* ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }}:~/flask-app/
    
    - name: Setup and run Flask app
      run: |
        ssh ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "cd ~/flask-app && \
          sudo apt update && \
          sudo apt install -y python3-pip python3.10-venv && \
          python3 -m venv venv && \
          source venv/bin/activate && \
          pip install flask gunicorn && \
          
          # Create startup script
          echo '#!/bin/bash
          cd /home/${{ secrets.AZURE_USERNAME }}/flask-app
          source venv/bin/activate
          gunicorn --bind=0.0.0.0:5000 app:app --log-level debug' > start-flask.sh && \
          chmod +x start-flask.sh && \
          
          # Kill any existing process on port 5000
          sudo lsof -t -i:5000 | xargs -r sudo kill || true && \
          
          # Run the app in the background with nohup
          nohup ./start-flask.sh > flask.log 2>&1 &"
    
    - name: Check if app is running
      run: |
        ssh ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "sleep 5 && \
          ps aux | grep gunicorn && \
          curl http://localhost:5000/ || (echo 'App not responding on localhost' && cat ~/flask-app/flask.log)"